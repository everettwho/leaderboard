{"ast":null,"code":"var _jsxFileName = \"/Users/everetthu/Personal/leaderboard/source-files/src/main.jsx\";\nimport React, { Component } from 'react';\nimport BigNumber from 'bignumber.js';\nimport styles from './main.module.scss';\nconst players = [{\n  name: 'E-Dawg',\n  wallet: '0x696fcAb51956D5a408A9416b703a8E012a90Db53'\n}, {\n  name: 'Moon-liano',\n  wallet: '0x0Db86254309601F625234d0819980ee8aECe0C46'\n}];\nconst ACCOUNTS_URI = 'https://api.dydx.exchange/v1/accounts';\nconst MARKETS_URI = 'https://api.dydx.exchange/v1/markets';\n\nclass Leaderboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async () => {\n      const fetchPromises = [fetch(MARKETS_URI)];\n      players.forEach(({\n        name,\n        wallet\n      }) => {\n        fetchPromises.push(fetch(`${ACCOUNTS_URI}/${wallet}`));\n      });\n      const responses = await Promise.all(fetchPromises);\n      const responsePromises = [];\n      responses.forEach(response => {\n        responsePromises.push(response.json());\n      });\n      const [{\n        markets\n      }, ...data] = await Promise.all(responsePromises);\n      console.log('12345markets', markets);\n      const parsedData = data.map(({\n        owner,\n        accounts\n      }) => {\n        const {\n          name\n        } = players.find(({\n          wallet\n        }) => wallet.toLowerCase() === owner.toLowerCase());\n        const totalBalances = {};\n        accounts.forEach(({\n          balances\n        }) => {\n          for (const key in balances) {\n            const {\n              marketId,\n              wei\n            } = balances[key];\n\n            if (totalBalances[marketId]) {\n              totalBalances[marketId] = totalBalances[marketId].plus(wei);\n            } else {\n              totalBalances[marketId] = new BigNumber(wei);\n            }\n          }\n\n          ;\n        });\n        console.log('12345totalBalances', totalBalances);\n        let totalValue = new BigNumber(0);\n        markets.forEach(({\n          id,\n          oraclePrice,\n          currency\n        }) => {\n          const price = new BigNumber(oraclePrice).div(`1e${36 - currency.decimals}`);\n          totalValue = totalValue.plus(price.times(totalBalances[id]));\n          console.log('12345id', id);\n          console.log('12345totalBalances[id]', totalBalances[id].toString());\n        });\n        return {\n          name,\n          wallet: owner,\n          totalValue\n        };\n      });\n      const sortedData = parsedData.sort((a, b) => a.totalValue.minus(b.totalValue).times(-1));\n      this.setState({\n        data: sortedData\n      });\n    };\n\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    console.log('12345data', data);\n    return React.createElement(\"div\", {\n      className: styles.leaderboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, data.map(({\n      name,\n      wallet,\n      totalValue\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, name, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"$\", totalValue.toString()))));\n  }\n\n}\n\nexport default Leaderboard;","map":{"version":3,"sources":["/Users/everetthu/Personal/leaderboard/source-files/src/main.jsx"],"names":["React","Component","BigNumber","styles","players","name","wallet","ACCOUNTS_URI","MARKETS_URI","Leaderboard","constructor","props","fetchData","fetchPromises","fetch","forEach","push","responses","Promise","all","responsePromises","response","json","markets","data","console","log","parsedData","map","owner","accounts","find","toLowerCase","totalBalances","balances","key","marketId","wei","plus","totalValue","id","oraclePrice","currency","price","div","decimals","times","toString","sortedData","sort","a","b","minus","setState","state","componentDidMount","render","leaderboard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BigNumber from 'bignumber.js';\nimport styles from './main.module.scss';\n\nconst players = [\n  { \n    name: 'E-Dawg',\n    wallet: '0x696fcAb51956D5a408A9416b703a8E012a90Db53',\n  },\n  {\n    name: 'Moon-liano',\n    wallet: '0x0Db86254309601F625234d0819980ee8aECe0C46',\n  }\n];\n\nconst ACCOUNTS_URI = 'https://api.dydx.exchange/v1/accounts';\nconst MARKETS_URI = 'https://api.dydx.exchange/v1/markets';\n\nclass Leaderboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    const fetchPromises = [fetch(MARKETS_URI)];\n\n    players.forEach(({ name, wallet }) => {\n      fetchPromises.push(fetch(`${ACCOUNTS_URI}/${wallet}`));\n    });\n\n    const responses = await Promise.all(fetchPromises);\n\n    const responsePromises = [];\n    responses.forEach(response => {\n      responsePromises.push(response.json());\n    });\n\n    const [{ markets }, ...data] = await Promise.all(responsePromises);\n    console.log('12345markets', markets);\n\n    const parsedData = data.map(({ owner, accounts }) => {\n      const { name } = players.find(({ wallet }) => wallet.toLowerCase() === owner.toLowerCase());\n\n      const totalBalances = {};\n      accounts.forEach(({ balances }) => {\n        for (const key in balances) {\n          const { marketId, wei } = balances[key];\n\n          if (totalBalances[marketId]) {\n            totalBalances[marketId] = totalBalances[marketId].plus(wei);\n          } else {\n            totalBalances[marketId] = new BigNumber(wei);\n          }\n        };\n      });\n      console.log('12345totalBalances', totalBalances);\n\n      let totalValue = new BigNumber(0);\n      markets.forEach(({ id, oraclePrice, currency }) => {\n        const price = new BigNumber(oraclePrice).div(`1e${36 - currency.decimals}`);\n        totalValue = totalValue.plus(price.times(totalBalances[id]));\n        console.log('12345id', id);\n        console.log('12345totalBalances[id]', totalBalances[id].toString());\n      });\n\n      return { name, wallet: owner, totalValue }\n    });\n\n    const sortedData = parsedData.sort((a, b) => a.totalValue.minus(b.totalValue).times(-1));\n    this.setState({ data: sortedData });\n  }\n\n  render() {\n    const { data } = this.state;\n    console.log('12345data', data);\n\n    return (\n      <div className={styles.leaderboard}>\n        {data.map(({ name, wallet, totalValue }) => (\n          <div>\n            {name}\n            <div>\n              ${totalValue.toString()}\n            </div>\n          </div>\n          ))}    \n      </div>\n    );\n  }\n}\n\nexport default Leaderboard;\n"]},"metadata":{},"sourceType":"module"}